// <auto-generated />
using System;
using CompanyVechile.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CompanyVechile.Migrations
{
    [DbContext(typeof(CompanyDBContext))]
    [Migration("20240503184617_1stCommit")]
    partial class _1stCommit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CompanyVechile.Models.Branches", b =>
                {
                    b.Property<int>("Branch_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Branch_ID"));

                    b.Property<string>("Branch_Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Branch_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Branch_ID");

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("CompanyVechile.Models.EmployeePhone", b =>
                {
                    b.Property<int>("Employee_ID")
                        .HasColumnType("int");

                    b.Property<int>("Employee_PhoneNumber")
                        .HasColumnType("int");

                    b.HasKey("Employee_ID", "Employee_PhoneNumber");

                    b.ToTable("EmployeePhones");
                });

            modelBuilder.Entity("CompanyVechile.Models.Employees", b =>
                {
                    b.Property<int>("Employee_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Employee_ID"));

                    b.Property<int>("Branch_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Employee_Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("Employee_BuildingNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Employee_City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Employee_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Employee_Nationality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Employee_Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Employee_Street_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Employee_ID");

                    b.HasIndex("Branch_ID");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("CompanyVechile.Models.Vehicle", b =>
                {
                    b.Property<int>("Vehicle_PlateNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Vehicle_PlateNumber"));

                    b.Property<int>("Branch_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("License_ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("License_Registeration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("License_SerialNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vehicle_BrandName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vehicle_ChassisNum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vehicle_Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Vehicle_ManufactureYear")
                        .HasColumnType("int");

                    b.Property<string>("Vehicle_PlateNum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vehicle_Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Vehicle_PlateNumber");

                    b.HasIndex("Branch_ID");

                    b.ToTable("Vehicle");
                });

            modelBuilder.Entity("EmployeesVehicle", b =>
                {
                    b.Property<int>("EmployeesEmployee_ID")
                        .HasColumnType("int");

                    b.Property<int>("VehiclesVehicle_PlateNumber")
                        .HasColumnType("int");

                    b.HasKey("EmployeesEmployee_ID", "VehiclesVehicle_PlateNumber");

                    b.HasIndex("VehiclesVehicle_PlateNumber");

                    b.ToTable("EmployeesVehicle");
                });

            modelBuilder.Entity("CompanyVechile.Models.EmployeePhone", b =>
                {
                    b.HasOne("CompanyVechile.Models.Employees", "Employees")
                        .WithMany()
                        .HasForeignKey("Employee_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("CompanyVechile.Models.Employees", b =>
                {
                    b.HasOne("CompanyVechile.Models.Branches", "Branches")
                        .WithMany()
                        .HasForeignKey("Branch_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branches");
                });

            modelBuilder.Entity("CompanyVechile.Models.Vehicle", b =>
                {
                    b.HasOne("CompanyVechile.Models.Branches", "Branches")
                        .WithMany("Vehicles")
                        .HasForeignKey("Branch_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branches");
                });

            modelBuilder.Entity("EmployeesVehicle", b =>
                {
                    b.HasOne("CompanyVechile.Models.Employees", null)
                        .WithMany()
                        .HasForeignKey("EmployeesEmployee_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CompanyVechile.Models.Vehicle", null)
                        .WithMany()
                        .HasForeignKey("VehiclesVehicle_PlateNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CompanyVechile.Models.Branches", b =>
                {
                    b.Navigation("Vehicles");
                });
#pragma warning restore 612, 618
        }
    }
}
